{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Binfac1\\\\Desktop\\\\reactproject\\\\src\\\\components\\\\search.js\";\nimport React, { useState, useEffect } from 'react';\nimport './search.css';\nimport Modal from 'react-modal';\nconst API_KEY = \"H26hdxkNLCsDWSf0va7zkKgWhbEEv_vnJxnfk-OOLhI\";\n\nconst Search = props => {\n  const [images, setImages] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const url = `https://api.unsplash.com/search/photos/?&query=${value}&per_page=9&client_id=${API_KEY}`;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  var subtitle; // const customStyles = {\n  //     content : {\n  //       top                   : '50%',\n  //       left                  : '50%',\n  //       right                 : 'auto',\n  //       bottom                : 'auto',\n  //       marginRight           : '-50%',\n  //       transform             : 'translate(-50%, -50%)'\n  //     }\n  //   };\n\n  const openModal = () => {\n    setIsOpen(true);\n  }; //   const afterOpenModal = () => {\n  //     // references are now sync'd and can be accessed.\n  //     subtitle.style.color = '#f00';\n  //   }\n\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const getInput = e => {\n    console.log(e.target.value);\n    setValue(e.target.value);\n  };\n\n  const onSearch = () => {\n    fetch(url).then(response => response.json()).then(data => {\n      setImages(data.results);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchStyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputSearch\",\n    type: \"text\",\n    placeholder: \"Search for images here...\",\n    onChange: getInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imagePageShow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, images.map(item => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      className: \"imageShow\",\n      key: item.id,\n      src: item.urls.regular,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Open Modal\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen //   onAfterOpen={afterOpenModal}\n    ,\n    onRequestClose: closeModal //   style={customStyles}\n    //   contentLabel=\"Example Modal\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"close\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/Binfac1/Desktop/reactproject/src/components/search.js"],"names":["React","useState","useEffect","Modal","API_KEY","Search","props","images","setImages","value","setValue","url","modalIsOpen","setIsOpen","subtitle","openModal","closeModal","getInput","e","console","log","target","onSearch","fetch","then","response","json","data","results","map","item","id","urls","regular"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './search.css'\r\nimport Modal from 'react-modal';\r\nconst API_KEY = \"H26hdxkNLCsDWSf0va7zkKgWhbEEv_vnJxnfk-OOLhI\";\r\n\r\nconst Search = props => {\r\n\r\n    const [images, setImages] = useState([]);\r\n    const [value, setValue] = useState(\"\");\r\n    const url = `https://api.unsplash.com/search/photos/?&query=${value}&per_page=9&client_id=${API_KEY}`;\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n\r\n    var subtitle;\r\n\r\n    // const customStyles = {\r\n    //     content : {\r\n    //       top                   : '50%',\r\n    //       left                  : '50%',\r\n    //       right                 : 'auto',\r\n    //       bottom                : 'auto',\r\n    //       marginRight           : '-50%',\r\n    //       transform             : 'translate(-50%, -50%)'\r\n    //     }\r\n    //   };\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n      }\r\n     \r\n    //   const afterOpenModal = () => {\r\n    //     // references are now sync'd and can be accessed.\r\n    //     subtitle.style.color = '#f00';\r\n    //   }\r\n     \r\n      const closeModal = ()=> {\r\n        setIsOpen(false);\r\n      }\r\n\r\n    const getInput = (e) => {\r\n        console.log(e.target.value);\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const onSearch = () => {\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setImages(data.results);\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"searchStyle\">\r\n                <input\r\n                    className=\"inputSearch\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search for images here...\"\r\n                    onChange={getInput}\r\n                />\r\n                <button onClick={onSearch}>Search</button>\r\n            </div>\r\n            <div className=\"imagePageShow\">\r\n                {images.map((item) => {\r\n                    return <img className=\"imageShow\" key={item.id} src={item.urls.regular} />\r\n                })}\r\n            </div>     \r\n            <button onClick={openModal}>Open Modal</button>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n        //   style={customStyles}\r\n        //   contentLabel=\"Example Modal\"\r\n        >\r\n \r\n          {/* <h2 ref={_subtitle => (subtitle = _subtitle)}>Hello</h2> */}\r\n          <button onClick={closeModal}>close</button>\r\n          {/* <div>I am a modal</div> */}\r\n          <form>\r\n            {/* <input /> */}\r\n            {/* <button>tab navigation</button>\r\n            <button>stays</button>\r\n            <button>inside</button> */}\r\n            {/* <button>the modal</button> */}\r\n          </form>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}